// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  password String
  departmentId Int 
  department  Department@relation(fields: [departmentId], references: [id])  // Added relation details
  ratings       Rating[]     // One-to-many relation: a user can have multiple ratings
  isAdmin      Boolean   @default(false) // Added isAdmin field with default value false
}


model Department {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  ratings     Rating[]
  users       User[]    // One-to-many relation
  // Additional fields specific to departments (optional)
}

model Rating {
  id            Int        @id @default(autoincrement())
  departmentId  Int
  likes         String
  dislikes      String
  improvements  String
  stars         Int
  isPublished   Boolean   @default(false)
  createdAt     DateTime   @default(now())
  quarter       Int        // Store the quarter information
  year          Int        // Store the year information
  ratedByUserId      Int        // ID of the user giving the rating
  department    Department @relation(fields: [departmentId], references: [id])
  ratedByUser        User       @relation(fields: [ratedByUserId], references: [id]) // Added relation details
}